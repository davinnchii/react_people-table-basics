{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","utils/consts.ts","utils/getMother.ts","utils/getFather.ts","components/PersonLink/PersonLink.tsx","components/Person/Person.tsx","components/PeopleList/PeopleList.tsx","components/NavList/Nav.tsx","components/HomePage/HomePage.tsx","components/PageNotFoundPage/PageNotFound.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","tableColumnNames","getMother","persons","person","find","sex","name","motherName","getFather","fatherName","PersonLink","to","slug","replace","Person","isFemale","born","died","mother","father","personSlug","useParams","classNames","PeopleList","useState","isLoading","setIsLoading","people","setPeople","isLoadingErrorShown","setIsLoadingErrorShown","useEffect","preparedPeople","map","catch","finally","isDataAvailable","length","isDataEmptyAndNoErrors","getNavStyles","isActive","Nav","role","HomePage","PageNotFound","PeoplePage","App","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.eccf63af.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { PersonType } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<PersonType[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      return response.json();\n    });\n}\n","export const GENDER_FEMALE = 'f';\nexport const GENDER_MALE = 'm';\nexport const tableColumnNames = ['Name',\n  'Sex', 'Born', 'Died', 'Mother', 'Father'];\nexport const NOT_SET_VALUE = '-';\n","import { PersonType } from '../types';\nimport { GENDER_FEMALE } from './consts';\n\nexport function getMother(persons: PersonType[], person: PersonType) {\n  return persons.find(({ sex, name }: PersonType) => sex === GENDER_FEMALE\n    && name === person.motherName);\n}\n","import { PersonType } from '../types';\nimport { GENDER_MALE } from './consts';\n\nexport function getFather(persons: PersonType[], person: PersonType) {\n  return persons.find(({ sex, name }: PersonType) => sex === GENDER_MALE\n    && name === person.fatherName);\n}\n","import { Link } from 'react-router-dom';\nimport { GENDER_FEMALE } from '../../utils/consts';\nimport { PersonType } from '../../types';\n\ntype Props = {\n  person: PersonType,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`${person.slug}`}\n      replace\n      className={person.sex === GENDER_FEMALE ? 'has-text-danger' : ''}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PersonType } from '../../types';\nimport { GENDER_FEMALE, NOT_SET_VALUE } from '../../utils/consts';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: PersonType,\n};\n\nexport const Person: React.FC<Props> = ({ person }) => {\n  const isFemale = person.sex === GENDER_FEMALE;\n  const {\n    slug,\n    name,\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={slug}\n          className={classNames({\n            'has-text-danger': isFemale,\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || NOT_SET_VALUE\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || NOT_SET_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { PersonType } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport {\n  tableColumnNames,\n} from '../../utils/consts';\nimport { getMother } from '../../utils/getMother';\nimport { getFather } from '../../utils/getFather';\nimport { Person } from '../Person/Person';\n\ntype Props = {};\n\nexport const PeopleList: React.FC<Props> = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<PersonType[]>([]);\n\n  const [isLoadingErrorShown, setIsLoadingErrorShown] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((persons) => {\n        const preparedPeople: PersonType[] = persons.map(\n          (person: PersonType) => ({\n            ...person,\n            mother: getMother(persons, person),\n            father: getFather(persons, person),\n          }),\n        );\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => {\n        setIsLoadingErrorShown(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isDataAvailable = !isLoadingErrorShown && !!people.length;\n  const isDataEmptyAndNoErrors = !people.length\n    && !isLoadingErrorShown && !isLoading;\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            {isDataAvailable && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    {tableColumnNames.map(name => <th key={name}>{name}</th>)}\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map((person) => {\n                    return (\n                      <Person person={person} />\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </>\n        )}\n        {isLoadingErrorShown && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {isDataEmptyAndNoErrors && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getNavStyles = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const Nav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getNavStyles} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getNavStyles}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => <h1 className=\"title\">Home Page</h1>;\n","export const PageNotFound = () => <h1 className=\"title\">Page not found</h1>;\n","import { PeopleList } from '../PeopleList/PeopleList';\n\nexport const PeoplePage = () => (\n  <>\n    <h1 className=\"title\">People Page</h1>\n    <PeopleList />\n  </>\n);\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { PeopleList } from './components/PeopleList/PeopleList';\nimport { Nav } from './components/NavList/Nav';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PageNotFound } from './components/PageNotFoundPage/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Nav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route\n              path=\"people\"\n              element={<PeoplePage />}\n            >\n              <Route path=\":personSlug\" element={<PeopleList />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<PageNotFound />}\n            />\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}