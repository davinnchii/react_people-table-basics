{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PeopleList/PeopleList.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PeopleList","useState","isLoading","setIsLoading","people","setPeople","isLoadingErrorShown","setIsLoadingErrorShown","personSlug","useParams","useEffect","persons","preparedPeople","map","person","mother","find","sex","name","motherName","father","fatherName","catch","finally","length","isFemale","classNames","slug","to","born","died","replace","getNavStyles","isActive","App","role","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.522f1134.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      return response.json();\n    });\n}\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\n\ntype Props = {};\n\nexport const PeopleList: React.FC<Props> = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const [isLoadingErrorShown, setIsLoadingErrorShown] = useState(false);\n\n  const { personSlug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then((persons) => {\n        const preparedPeople: Person[] = persons.map((person: Person) => ({\n          ...person,\n          mother: persons.find(({ sex, name }: Person) => sex === 'f'\n            && name === person.motherName),\n          father: persons.find(({ sex, name }: Person) => sex === 'm'\n            && name === person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => {\n        setIsLoadingErrorShown(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            {(!isLoadingErrorShown && !!people.length) && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map((person) => {\n                    const isFemale = person.sex === 'f';\n\n                    return (\n                      <tr\n                        data-cy=\"person\"\n                        className={classNames({\n                          'has-background-warning': person.slug === personSlug,\n                        })}\n                      >\n                        <td>\n                          <Link\n                            to={person.slug}\n                            className={classNames({\n                              'has-text-danger': isFemale,\n                            })}\n                          >\n                            {person.name}\n                          </Link>\n                        </td>\n\n                        <td>{person.sex}</td>\n                        <td>{person.born}</td>\n                        <td>{person.died}</td>\n                        <td>\n                          {person.mother ? (\n                            <Link\n                              to={`${person.mother.slug}`}\n                              replace\n                              className=\"has-text-danger\"\n                            >\n                              {person.motherName}\n                            </Link>\n                          ) : (\n                            person.motherName || '-'\n                          )}\n                        </td>\n                        <td>\n                          {person.father ? (\n                            <Link to={`${person.father.slug}`}>\n                              {person.fatherName}\n                            </Link>\n                          ) : (\n                            person.fatherName || '-'\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            )}\n          </>\n        )}\n        {isLoadingErrorShown && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {(!people.length && !isLoadingErrorShown && !isLoading) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { PeopleList } from './components/PeopleList/PeopleList';\n\nconst getNavStyles = (\n  { isActive }: { isActive: boolean },\n) => classNames('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={getNavStyles} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getNavStyles}\n              to=\"people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route\n              path=\"people\"\n              element={(\n                <>\n                  <h1 className=\"title\">People Page</h1>\n                  <PeopleList />\n                </>\n              )}\n            >\n              <Route path=\":personSlug\" element={<PeopleList />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}